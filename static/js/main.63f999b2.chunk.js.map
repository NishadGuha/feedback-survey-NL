{"version":3,"sources":["components/SuccessPage.js","components/ToggleButtons.js","components/Survey.js","App.js","reportWebVitals.js","index.js"],"names":["SuccessPage","history","useHistory","class","id","onClick","push","ToggleButtons","React","alignment","setAlignment","ToggleButtonGroup","color","value","exclusive","onChange","event","newAlignment","ToggleButton","Survey","TextField","type","Button","variant","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAqBeA,MAjBf,WAEI,IAAMC,EAAUC,cAMhB,OACI,sBAAKC,MAAM,OAAX,UACI,4CACA,mBAAGC,GAAG,cAAcD,MAAM,wBAC1B,mBAAGC,GAAG,OAAOD,MAAM,kBAAkBE,QAR1B,WACfJ,EAAQK,KAAK,Y,4CCqBNC,MAzBf,WAEI,MAAkCC,WAAe,QAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,OACI,qBAAKP,MAAM,MAAMC,GAAG,eAApB,SACE,eAACO,EAAA,EAAD,CACER,MAAM,eACNS,MAAM,UACNC,MAAOJ,EACPK,WAAS,EACTC,SAXa,SAACC,EAAOC,GACzBP,EAAaO,IAKX,UAOE,cAACC,EAAA,EAAD,CAAcL,MAAM,MAApB,SAA0B,mBAAGV,MAAM,mBACnC,cAACe,EAAA,EAAD,CAAcL,MAAM,KAApB,SAAyB,mBAAGV,MAAM,iBAClC,cAACe,EAAA,EAAD,CAAcL,MAAM,OAApB,SAA2B,mBAAGV,MAAM,8BCUjCgB,MA3Bf,WAEI,IAAMlB,EAAUC,cAMhB,OACI,sBAAKC,MAAM,OAAX,UACA,oBAAIA,MAAM,MAAMC,GAAG,SAAnB,gDACA,cAAC,EAAD,IACA,qBAAKD,MAAM,MAAMC,GAAG,UAApB,SACE,+BACE,uDAEE,uBACA,uBACA,cAACgB,EAAA,EAAD,CAAWhB,GAAG,UAAUiB,KAAK,gBAInC,cAACC,EAAA,EAAD,CAAQD,KAAK,SAASjB,GAAG,cAAcmB,QAAQ,OAAOlB,QAlB9B,WACxBJ,EAAQK,KAAK,aAiBb,0B,QCZOkB,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWR,IACjC,cAAC,IAAD,CAAOM,KAAK,WAAWE,UAAW3B,UCC3B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63f999b2.chunk.js","sourcesContent":["import React from 'react'\nimport '../App.scss';\nimport { useHistory } from 'react-router-dom';\n\nfunction SuccessPage() {\n\n    const history = useHistory();\n\n    const redoSurvey = () => {\n        history.push(\"/\");\n    }\n\n    return (\n        <div class=\"body\">\n            <h3>Verstuurd!</h3>\n            <i id=\"successTick\" class=\"fas fa-check-circle\"></i>\n            <i id=\"redo\" class=\"fas fa-undo-alt\" onClick={redoSurvey}></i>\n        </div>\n    )\n}\n\nexport default SuccessPage\n","import * as React from 'react';\nimport '../App.scss';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nfunction ToggleButtons() {\n\n    const [alignment, setAlignment] = React.useState('good');\n\n    const handleChange = (event, newAlignment) => {\n        setAlignment(newAlignment);\n    };\n\n    return (\n        <div class=\"col\" id=\"emojiButtons\">\n          <ToggleButtonGroup\n            class=\"toggleButton\"\n            color=\"primary\"\n            value={alignment}\n            exclusive\n            onChange={handleChange}\n          >\n            <ToggleButton value=\"bad\"><i class=\"far fa-frown\"></i></ToggleButton>\n            <ToggleButton value=\"ok\"><i class=\"far fa-meh\"></i></ToggleButton>\n            <ToggleButton value=\"good\"><i class=\"far fa-smile-beam\"></i></ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n    )\n}\n\nexport default ToggleButtons\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport '../App.scss';\nimport TextField from '@mui/material/TextField';\nimport ToggleButtons from './ToggleButtons';\nimport { useHistory } from 'react-router-dom';\n\nfunction Survey() {\n\n    const history = useHistory();\n\n    const submitSurveyHandler = () => {\n        history.push(\"/success\");\n    }\n\n    return (\n        <div class=\"body\">\n        <h3 class=\"col\" id=\"header\">Hoe heb je dit applicatie ervaren?</h3>\n        <ToggleButtons />\n        <div class=\"col\" id=\"formDiv\">\n          <form>\n            <label>\n              Plaats commentaar:\n              <br/>\n              <br/>\n              <TextField id=\"comment\" type=\"text\"/>\n            </label>\n          </form>\n        </div>\n        <Button type=\"submit\" id=\"ModalButton\" variant=\"text\" onClick={submitSurveyHandler}>Verstuur</Button>\n      </div>\n    )\n}\n\nexport default Survey\n","import * as React from 'react';\nimport './App.scss';\nimport SuccessPage from './components/SuccessPage';\nimport Survey from './components/Survey';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Survey} />\n        <Route path=\"/success\" component={SuccessPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}