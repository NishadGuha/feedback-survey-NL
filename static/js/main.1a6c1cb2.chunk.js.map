{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","alignment","setAlignment","class","id","ToggleButtonGroup","color","value","exclusive","onChange","event","newAlignment","ToggleButton","TextField","type","Button","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA8CeA,MAvCf,WAEE,MAAkCC,WAAe,QAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,OACI,sBAAKC,MAAM,OAAX,UACE,oBAAIA,MAAM,MAAMC,GAAG,SAAnB,gDACA,qBAAKD,MAAM,MAAMC,GAAG,eAApB,SACE,eAACC,EAAA,EAAD,CACEF,MAAM,eACNG,MAAM,UACNC,MAAON,EACPO,WAAS,EACTC,SAbW,SAACC,EAAOC,GAC3BT,EAAaS,IAOP,UAOE,cAACC,EAAA,EAAD,CAAcL,MAAM,MAApB,SAA0B,mBAAGJ,MAAM,mBACnC,cAACS,EAAA,EAAD,CAAcL,MAAM,KAApB,SAAyB,mBAAGJ,MAAM,iBAClC,cAACS,EAAA,EAAD,CAAcL,MAAM,OAApB,SAA2B,mBAAGJ,MAAM,6BAGxC,qBAAKA,MAAM,MAAMC,GAAG,UAApB,SACE,+BACE,uDAEE,uBACA,uBACA,cAACS,EAAA,EAAD,CAAWT,GAAG,UAAUU,KAAK,gBAInC,cAACC,EAAA,EAAD,CAAQD,KAAK,SAASV,GAAG,cAAcY,QAAQ,OAA/C,0BC7BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a6c1cb2.chunk.js","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport './App.scss';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport TextField from '@mui/material/TextField';\n\nfunction App() {\n\n  const [alignment, setAlignment] = React.useState('good');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n  \n  return (\n      <div class=\"body\">\n        <h3 class=\"col\" id=\"header\">Hoe heb je dit applicatie ervaren?</h3>\n        <div class=\"col\" id=\"emojiButtons\">\n          <ToggleButtonGroup\n            class=\"toggleButton\"\n            color=\"primary\"\n            value={alignment}\n            exclusive\n            onChange={handleChange}\n          >\n            <ToggleButton value=\"bad\"><i class=\"far fa-frown\"></i></ToggleButton>\n            <ToggleButton value=\"ok\"><i class=\"far fa-meh\"></i></ToggleButton>\n            <ToggleButton value=\"good\"><i class=\"far fa-smile-beam\"></i></ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <div class=\"col\" id=\"formDiv\">\n          <form>\n            <label>\n              Plaats commentaar:\n              <br/>\n              <br/>\n              <TextField id=\"comment\" type=\"text\"/>\n            </label>\n          </form>\n        </div>\n        <Button type=\"submit\" id=\"ModalButton\" variant=\"text\">Verstuur</Button>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}